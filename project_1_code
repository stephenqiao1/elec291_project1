$NOLIST
$MODLP51RC2
$LIST

$NOLIST
$include(LCD_4bit.inc) ; A library of LCD related functions and utility macros
$LIST

$NOLIST
$include(math32.inc)
$LIST

CLK  EQU 22118400
BAUD equ 115200
BRG_VAL equ (0x100-(CLK/(16*BAUD)))
; These �EQU� must match the wiring between the microcontroller and ADC 

; Reset vector
org 0x0000
    ljmp main
; External interrupt 0 vector (not used in this code)
org 0x0003
	reti
; Timer/Counter 0 overflow interrupt vector
org 0x000B
	ljmp Timer0_ISR
; External interrupt 1 vector (not used in this code)
org 0x0013
	reti
; Timer/Counter 1 overflow interrupt vector (not used in this code)
org 0x001B
	reti
; Serial port receive/transmit interrupt vector (not used in this code)
org 0x0023 
	reti	
; Timer/Counter 2 overflow interrupt vector
org 0x002B
	ljmp Timer2_ISR


; Place our variables here
DSEG at 0x30 ; Before the state machine!
state: ds 1
temp_soak: ds 1
Time_soak: ds 1
Temp_refl: ds 1
Time_refl: ds 1


bseg

cseg
; These 'equ' must match the hardware wiring
LCD_RS equ P3.2
;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
LCD_E  equ P3.3
LCD_D4 equ P3.4
LCD_D5 equ P3.5
LCD_D6 equ P3.6
LCD_D7 equ P3.7

;States for oven controller
;State 0
;Adjustable Parameters that are displayed on LCD


state0_oven:
    cjne a, #0, state1 ;start = 0, off = 1
    mov pwm, #0
    jb PB6, state0_done
    jnb PB6, $ ; Wait for key release
    mov state, #1
state0_done:
    ljmp forever

state1:
    cjne a, #1, state2
    mov pwm, #100
    mov sec, #0
    mov a, temp_soak
    clr c
    subb a, temp
    jnc state1_done
    mov state, #2
state1_done:
    ljmp forever


state2:
cjne a, #2, state3
mov pwm, #20
mov a, time_soak
clr c
subb a, sec
jnc state2_done
mov state, #3
state2_done:
ljmp forever

;

main: 



